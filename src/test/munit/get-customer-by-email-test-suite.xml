<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="get-customer-by-email-test-suite.xml" />
	<munit:test name="get-customer-by-email-test-suite" doc:id="f648540d-f6e3-449e-90be-ee55ce2ff8c4" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Salesforce Call" doc:id="543ae067-056d-4d90-8228-bea1f0abd688" processor="salesforce:query">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9afa05b9-29a3-45a3-b979-b4ae5bc804d6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://getCustomerByEmail/mockWhenResponse.dwl')]" />
				</munit-tools:then-return>

			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Email URI Param Event" doc:id="d8189634-2ddd-4ff8-b16d-2c8843e7d7b8" >
				<munit:attributes value="#[readUrl('classpath://getCustomerByEmail/setEventAttributes.dwl')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to get-customer-by-email-sub-flow" doc:id="221d430d-70aa-4b7c-8149-cf1f397aa059" name="get:\customers\(email):ag-micorp-sys-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert Query Response" doc:id="388eedfb-7b78-4b73-a22c-553e34ec0e52" >
				<munit-tools:that ><![CDATA[#[import getCustomerByEmail::assertExpressionResponse
---
assertExpressionResponse::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	
</munit:test>


</mule>
